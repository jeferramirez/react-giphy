{"version":3,"sources":["components/CategoryAdd.jsx","components/GiftGridItem.jsx","helpers/getGifs.js","components/GiftGrid.jsx","hooks/useFetchGifs.js","App.js","index.js"],"names":["Search","Input","CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","placeholder","onSearch","value","enterButton","GiftGridItem","url","title","id","hoverable","bordered","style","width","height","marginRight","marginTop","cover","src","alt","className","getGift","category","a","encodeURI","fetch","resp","json","data","giftData","map","element","images","downsized_medium","GiftGrid","loading","state","steState","useEffect","then","imgs","useFetchGifs","img","key","App","categories","ReactDOM","render","document","getElementById"],"mappings":"gLAGQA,E,OAAWC,EAAXD,OAiCOE,EA9BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAiBvC,OACO,oCACA,0BAAMC,SAZU,SAACC,GAEjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAa,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,OAQvB,6BACM,kBAACN,EAAD,CAAQa,YAAY,aAAaC,SAlBf,SAACC,GACnBT,EAAcS,IAiB+CC,aAAW,Q,SCTjEC,EAdM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAASC,GAAY,EAAhBC,GAAgB,EAAZD,OAChC,OACC,kBAAC,IAAD,CACUE,WAAS,EACTC,UAAQ,EACRH,MAAQA,EACjBI,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,YAAY,GAAIC,UAAW,IAC7DC,MAAO,yBAAKC,IAAKX,EAAKY,IAAKX,EAAQY,UAAU,gB,yBCTlCC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBhB,EADgB,0FAE8DiB,UAAUF,GAFxE,sBAGHG,MAAMlB,GAHH,cAGhBmB,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KACFC,EAAWD,EAAKE,KAAI,SAACC,GAC1B,MAAO,CACNtB,GAAIsB,EAAQtB,GACZD,MAAOuB,EAAQvB,MACfD,IAAKwB,EAAQC,OAAOC,iBAAiB1B,QATjB,kBAYfsB,GAZe,4CAAH,sDCwBNK,EArBE,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFP,SAACA,GAAc,IAAD,EACf7B,mBAAS,CAClCmC,KAAM,GACNO,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACTjB,EAAQC,GAAUiB,MAAK,SAACC,GACvBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGT,CAACb,IAEGc,EDTwBK,CAAanB,GAAhCU,EAJsB,EAI3BJ,KAAaO,EAJc,EAIdA,QAGpB,OACC,6BACC,wBAAIf,UAAU,MAAME,GACnBa,GAAW,2CAEZ,wBAAIf,UAAU,aACZY,EAAOF,KAAI,SAACY,GAAD,OACX,kBAAC,EAAD,eAAcC,IAAKD,EAAIjC,IAAQiC,U,OEarBE,MA1Bf,WAAgB,IAAD,EAGqBnD,mBAAS,CAAC,cAH/B,mBAGNoD,EAHM,KAGMrD,EAHN,KAKb,OACE,yBAAK4B,UAAU,OAEX,wBAAIA,UAAU,WAAd,YACA,kBAAC,EAAD,CAAa5B,YAAcA,IAG3B,4BAEKqD,EAAWf,KAAK,SAACR,GAAD,OACf,kBAAC,EAAD,CACCA,SAAWA,EACXqB,IAAKrB,UCjBpBwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ca68bea9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'antd';\nconst { Search } = Input;\n\n\nconst CategoryAdd = ( {setCategory}) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputValue = (value) => {\n        setInputValue(value);\n    };\n    \n    const handlSubmit = (e) => {\n\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n           setCategory( categorias => [ inputValue, ...categorias]);\n           setInputValue(''); \n        }\n\n    }\n\n\treturn (\n        <>\n        <form onSubmit= {handlSubmit}>\n\t\t<div>\n        <Search placeholder=\"Buscar ...\" onSearch={handleInputValue} enterButton />\n\t\t</div>\n\n        </form>\n        </>\n\t);\n};\n\n\nexport default CategoryAdd;\n\nCategoryAdd.propTypes = {\n    setCategory : PropTypes.func.isRequired\n}\n\n","import React from 'react';\nimport { Card } from 'antd';\n\n\nconst GiftGridItem = ({ url, id, title }) => {\n\treturn (\n\t\t<Card\n            hoverable\n            bordered\n            title= {title}\n\t\t\tstyle={{ width: 240, height: 300, marginRight:20, marginTop: 20}}\n\t\t\tcover={<img src={url} alt={title}  className=\"card-img\" />}\n\t\t>\n\t\t\t{/* <Meta title=\"Europe Street beat\" description={title} /> */}\n\t\t</Card>\n\t);\n};\n\nexport default GiftGridItem;\n","\n\n\texport const getGift = async (category) => {\n\t\tconst url =\n\t\t\t`https://api.giphy.com/v1/gifs/search?api_key=O7wEvyI3DibGvOFEJK6tZdW5WTRbRV48&q=${encodeURI(category)}&limit=10`;\n\t\tconst resp = await fetch(url);\n\t\tconst { data } = await resp.json();\n\t\tconst giftData = data.map((element) => {\n\t\t\treturn {\n\t\t\t\tid: element.id,\n\t\t\t\ttitle: element.title,\n\t\t\t\turl: element.images.downsized_medium.url,\n\t\t\t};\n\t\t});\n\t\treturn(giftData);\n\t};\n","import React  from 'react';\nimport GiftGridItem from './GiftGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nconst GiftGrid = ({ category }) => {\n\n\n\n\tconst {data:images, loading} = useFetchGifs(category)\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className=\"mt\">{category}</h2>\n\t\t\t{loading && <p> Loading ...</p> }\n\n\t\t\t<ol className=\"card-grid\">\n\t\t\t\t{images.map((img) => (\n\t\t\t\t\t<GiftGridItem key={img.id} {...img} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n\nexport default GiftGrid;\n","import { useState, useEffect } from 'react';\nimport { getGift } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\tconst [state, steState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGift(category).then((imgs) => {\n\t\t\tsteState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React, { useState } from 'react';\nimport CategoryAdd from './components/CategoryAdd';\nimport GiftGrid from './components/GiftGrid';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\n\nfunction App() {\n\n\n  const [categories, setCategory] = useState(['One punch']);\n\n  return (\n    <div className=\"App\">\n        \n        <h1 className=\"centrar\">Gift APP</h1>\n        <CategoryAdd setCategory= {setCategory}/>\n        {/* <button onClick ={handleAdd}> Agregar</button> */}\n\n        <ol>\n           {\n             categories.map( (category) => (\n              <GiftGrid\n               category= {category}\n               key={category}\n              />\n             ))\n           }\n        </ol>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}